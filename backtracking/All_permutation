/*find all permutation of n number
Approach
backtracking or dfs
*/

  Set<Integer> hs = new HashSet<>();
    List<List<Integer>> an = new ArrayList<>();
    public void permute(int n,List<Integer> p){
        if(p.size()==n){
            List<Integer> x = new ArrayList<>();
            for(int i=0;i<p.size();i++){
                x.add(p.get(i));
            }
            an.add(x);
            return;
        }
        for(int i=1;i<=n;i++){
            if(!hs.contains(i)){
                hs.add(i);
                p.add(i);
                permute(n,p);
                p.remove(Integer.valueOf(i));
                hs.remove(i);
            }
        }
    }
